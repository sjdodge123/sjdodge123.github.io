{
    "Stagehand" : {
      "id" : "sh-card",
      "card-title" : "Stagehand",
      "card-image" : "assets/img/portfolio/stagehand/stagehandoverviewsmall.gif",
      "card-alt" : "Stagehand portal image",
      "card-short" : "Custom ServiceNow portal for CBS Corporation",
      "card-skills": "ServiceNow | Leadership | JavaScript",
      "modal-image": "assets/img/portfolio/stagehand/stagehandoverview.gif",
      "modal-title": "Stagehand",
      "modal-url": "",
      "modal-github": "",
      "modal-content":"<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\"><em><span style=\"font-size: 14pt; font-family: 'Segoe UI Emoji', sans-serif; color: #2b3e50; background: white;\">Overview</span></em></p>\n<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\"><span style=\"font-family: 'Segoe UI', sans-serif; color: #212529; background: white;\">Stagehand was a custom front end service portal for non-IT end users. This portal focused heavily on user experience and was designed to create a &ldquo;Facebook&rdquo; or &ldquo;Amazon&rdquo; like experience. The end result allowed the company to have a centralized location for all requests and tickets with a consistent user experience. ServiceNow is the lead platform for integrations and workflows and we layered in a best in class portal to interact with these other systems. The portal also presented end users with custom deflection tools to curb unnecessary tickets. Stagehand was a collaborative effort between designers, developers and business analysts.</span></p>\n<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\"><span style=\"font-family: 'Segoe UI', sans-serif; color: #212529; background: white;\">&nbsp;</span></p>\n<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\"><em><span style=\"font-size: 14pt; font-family: 'Segoe UI Emoji', sans-serif; color: #2b3e50; background: white;\">My role</span></em></p>\n<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\"><span style=\"font-family: 'Segoe UI', sans-serif; color: #212529; background: white;\">I personally lead the team to maintain and grow the portal after I helped with the launch and implementation. The design was complemented by a data driven architecture that allowed the team to create and manage configuration records that were connected to behavior on the portal. Instead of having to rebuild elements for every little change we were able to make tweaks to data directly in production.</span></p><br/><img class='img-fluid rounded w-100' src='assets/img/portfolio/stagehand/stagehandmyactivity.gif'</img><br/><img class='img-fluid rounded w-100' src='assets/img/portfolio/stagehand/stagehandcatalogoverview.gif'</img><br/><img class='img-fluid rounded w-100' src='assets/img/portfolio/stagehand/submitincident.gif'</img>"
    },
    
    "SpaceRoyale.io" : {
      "id" : "sr-card",
      "card-title" : "SpaceRoyale.io",
      "card-image" : "assets/img/blaster_minimized.gif",
      "card-alt" : "Ship shooting laser turret at another ship",
      "card-short" : "Node js based battle royale game with realtime multiplayer",
      "card-skills": "NodeJS | AWS | HTML5 | Game Design",
      "modal-image": "assets/img/portfolio/spaceroyale.io/image7.png",
      "modal-title": "SpaceRoyale.io",
      "modal-url": "http://spaceroyale.io",
      "modal-github": "https://github.com/sjdodge123/spaceroyale.io",
      "modal-content": "<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif; text-align: center; text-indent: 0.5in;\" align=\"center\"><strong><span style=\"font-size: 13.5pt; font-family: 'Segoe UI Emoji', sans-serif; color: #2b3e50;\"><br /></span></strong><strong><span style=\"font-size: 10.5pt; font-family: 'Segoe UI Emoji', sans-serif; color: #2b3e50;\">If this is right up your alley please feel free to see the above Github link to check out the entire project including it&rsquo;s history and source code.</span></strong></p>\n<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\"><strong><span style=\"font-size: 13.5pt; font-family: 'Segoe UI Emoji', sans-serif; color: #2b3e50;\"><br /></span></strong><span style=\"font-size: 13.5pt; font-family: 'Segoe UI Emoji', sans-serif; color: #2b3e50;\">SpaceRoyale.io is an online multiplayer game supporting up to 50 real time players. The game is built entirely in JavaScript utilizing NodeJS for the server code and in-browser JavaScript via canvas to deliver a front end experience for the players. SpaceRoyale was a collaborative effort between me and a colleague of mine, </span><span style=\"font-size: 13.5pt; font-family: 'Segoe UI Emoji', sans-serif; color: #f5880e;\"><a style=\"color: #954f72;\" href=\"https://rtoole13.github.io/\"><span style=\"color: #f5880e;\">Ryan Toole</span></a></span><span style=\"font-size: 13.5pt; font-family: 'Segoe UI Emoji', sans-serif; color: #2b3e50;\">. Ryan designed the physics systems like collision handling, he designed all of the artwork, and worked with me on game design and generate implementation of game mechanics. Whereas I developed the architecture of the networking code, AWS hosting, database design, and front end webpage to support the game. Many challenges were presented in building this game, but the knowledge and experienced gained from this endeavor were well worth the effort. In this article I will walk through the methodology used to design the game, reveal the architecture of the infrastructure, as well as explain what I learned at the end of the project.</span></p>\n<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\"><span style=\"font-size: 13.5pt; font-family: 'Segoe UI Emoji', sans-serif; color: #2b3e50;\">&nbsp;</span></p>\n<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\"><em><span style=\"font-size: 14pt; font-family: 'Segoe UI Emoji', sans-serif; color: #2b3e50;\">Methodology</span></em></p>\n<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\"><span style=\"font-family: 'Segoe UI Emoji', sans-serif; color: #2b3e50;\">&nbsp;</span></p>\n<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\"><span style=\"font-family: 'Segoe UI Emoji', sans-serif; color: #2b3e50;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; From the inception of the concept the goal of this game was deliver a Battle Royale game experience in a shorter timespan than traditionally available in the genre. Selecting a browser based game was important for this timespan as it would allow more casual players to enter without having to install or purchase the game. The goal was to have many quick-join players enter an arena to battle and win or lose within a 3 to 4 minute time frame. A full breakdown of the gameplay design can be seen on our google doc </span><span style=\"font-family: 'Segoe UI Emoji', sans-serif; color: #f5880e;\"><a style=\"color: #954f72;\" href=\"https://docs.google.com/document/d/1e_ROuaIE-R75-oeXf_H0CHULeA28QofNQ7EeoZG2x7I/edit\"><span style=\"color: #f5880e;\">here</span></a></span><span style=\"font-family: 'Segoe UI Emoji', sans-serif; color: #2b3e50;\">.</span></p>\n<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\"><span style=\"font-family: 'Segoe UI Emoji', sans-serif; color: #2b3e50;\">&nbsp;</span></p>\n<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\"><em><span style=\"font-size: 14pt; font-family: 'Segoe UI Emoji', sans-serif; color: #2b3e50;\">Architecture</span></em></p>\n<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\"><em><span style=\"font-size: 14pt; font-family: 'Segoe UI Emoji', sans-serif; color: #2b3e50;\">&nbsp;</span></em></p>\n<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\"><span style=\"font-family: 'Segoe UI Emoji', sans-serif; color: #2b3e50;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The game started out as a simple browser based lobby built on the socket.io framework that would allow players to join and move their square around. There was no &ldquo;game&rdquo; per say at this stage but it had all the workings needed to support any multiplayer game built into a browser. This stage was forked on </span><span style=\"font-family: 'Segoe UI Emoji', sans-serif; color: #f5880e;\"><a style=\"color: #954f72;\" href=\"https://github.com/sjdodge123/Multiplayer-Game-Demo\"><span style=\"color: #f5880e;\">GitHub</span></a></span><span style=\"font-family: 'Segoe UI Emoji', sans-serif; color: #2b3e50;\"> and the plan was to have this available to branch into several other online games if desired.</span></p>\n<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\"><span style=\"font-family: 'Segoe UI Emoji', sans-serif; color: #2b3e50;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; As the game concept was formed and the need arose, the architecture needed to support the gameplay expanded. The game in its final state supports multiple lobbies of gameplay at the same time. This meant that if Player A joined and started a game when player B joined they could start a game independently and the server could handle multiple sessions occurring at once. This architecture is implied based on the menu structure of the landing page. In order to simplify the player experience the player simply chooses a ship color and name and presses play. The server then will find an available lobby to join and the player enters. Once the starting conditions are met that lobby will then create a game and all players in the lobby will be entered. If the lobby capacity was reached before the game could start a new lobby would be created and any newly joining players would be directed to that lobby. Given that the game server has enough bandwidth to support multiple lobbies this lobby architecture is scalable and could even be reconfigured to hand play sessions over to additional game session servers. This is just one example of the architecture in the game that I built.</span></p>\n<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\"><span style=\"font-family: 'Segoe UI Emoji', sans-serif; color: #2b3e50;\">&nbsp;</span></p>\n<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\"><em><span style=\"font-size: 14pt; font-family: 'Segoe UI Emoji', sans-serif; color: #2b3e50;\">What I learned</span></em></p>\n<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\"><span style=\"font-family: 'Segoe UI Emoji', sans-serif; color: #2b3e50;\">&nbsp;</span></p>\n<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\"><span style=\"font-family: 'Segoe UI Emoji', sans-serif; color: #2b3e50;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; From the beginning I knew this was going to be an ambitious project. I had never made a real-time multiplayer game and I wanted to understand the efforts of what that would take. In my conceptual learning phase I needed to understand how data could be transmitted in real time across the internet to my application on multiple computers. I began my research into sockets. After many hours I was able to produce a flash based (Actionscript3) demo that could move an object on a server from a client. I had hosted a game server on my home computer, set up my router to port forward properly and drove to a local Starbucks to test it out. That first time I moved my character on the screen was amazing! I proved that I could achieve the basics the rest was about scaling.</span></p>\n<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\"><span style=\"font-family: 'Segoe UI Emoji', sans-serif; color: #2b3e50;\">&nbsp;</span></p>\n<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\"><span style=\"font-family: 'Segoe UI Emoji', sans-serif; color: #2b3e50;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Later in the project development I switched to a different framework for better native support of my application as well as drastically changed the scope to be something more palatable. Using Sockets.io I did a fast demo provided on their website on setting up an instant message chat client. This was amazing as I realized its potential as a web framework immediately. I could bypass having to deal with sockets directly and let the framework handle the dirty work.</span></p>\n<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\"><span style=\"font-family: 'Segoe UI Emoji', sans-serif; color: #2b3e50;\">&nbsp;</span></p>\n<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\"><span style=\"font-family: 'Segoe UI Emoji', sans-serif; color: #2b3e50;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; In the original design of the project I wanted to learn how JavaScript can interact with databases to store basic player information and allow authentication for the sake of player progression. I had years of experience working in ServiceNow to leverage which is essentially a giant relational database with a JavaScript script base. Knowing how the database should be structured, I went off and learned how to make a Maria database with AWS. I connected this database to the game to store quests/player information/kill counts etc. Once I understood how to connect these things on a native level I feel more confident using existing frameworks that interact with these tools.</span></p><br/><img class='img-fluid rounded w-100' src='assets/img/portfolio/spaceroyale.io/hackingdrone.gif'</img><br/><img class='img-fluid rounded w-100' src='assets/img/portfolio/spaceroyale.io/nebula.gif'</img><br/><img class='img-fluid rounded w-100' src='assets/img/portfolio/spaceroyale.io/photoncannon.gif'</img>"
    },

    "Interstellar" : {
        "id" : "interstellar-card",
        "card-title" : "Interstellar",
        "card-image" : "assets/img/portfolio/interstellar/asteroidspinsmall.gif",
        "card-alt" : "Picture of asteroids spinning around a ship in the center",
        "card-short" : "Physics demo using self made game engine in javascript canvas",
        "card-skills": "JavaScript | HTML5",
        "modal-image": "assets/img/portfolio/interstellar/asteroidspinhd.gif",
        "modal-title": "Interstellar",
        "modal-url": "",
        "modal-github": "https://github.com/sjdodge123/interstellar",
        "modal-content":"<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif; background: white;\"><em><span style=\"font-size: 14pt; font-family: 'Segoe UI Emoji', sans-serif; color: #2b3e50;\">Overview</span></em></p>\n<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\">Interstellar is a design and physics demo to test the capabilities of the HTML5 canvas. The &ldquo;game&rdquo; design here was form fitted to test out an interesting mechanic allowing the player to manipulate gravity to control asteroids that exist in the physics simulation. The asteroids will gain momentum from orbiting the player. When the player releases the asteroid from the belt will it carry the momentum gained from orbiting the player and act as a projectile. In the demo gif above, you can see when an asteroid overlaps another it turns red demonstrating the custom complex hit detection engine.</p>\n<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\">&nbsp;</p>\n<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\"><em><span style=\"font-size: 14pt; font-family: 'Segoe UI Emoji', sans-serif; color: #2b3e50; background: white;\">What I learned</span></em></p>\n<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\">This project provided the framework for working out of NodeJS and deploying a small webserver to host an HTML5 game. It was a great learning experience to understand canvas and the capabilities and where it is lacking. It turned out that utilizing Unity for this project was much faster and allowed me to focus on game design more than technology implementation. This was later recreated in the unity engine <a style=\"color: #954f72;\" href=\"https://github.com/sjdodge123/interstellarUnity\">here</a>.</p>"
    },

    "CadyGorbet.com" : {
        "id" : "cadygorbet-card",
        "card-title" : "CadyGorbet.com",
        "card-image" : "assets/img/cadygorbet.png",
        "card-alt" : "Picture of cadygorbet's home decor blog site",
        "card-short" : "Custom blog site using bootstrap hosted on AWS",
        "card-skills": "JavaScript | AWS | PHP | Bootstrap",
        "modal-image": "assets/img/cadygorbet.png",
        "modal-title": "CadyGorbet.com",
        "modal-url": "http://www.cadygorbet.com",
        "modal-github": "https://github.com/sjdodge123/cadygorbet",
        "modal-content":"<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif; background: white;\"><em><span style=\"font-size: 14pt; font-family: 'Segoe UI Emoji', sans-serif; color: #2b3e50;\">Overview</span></em></p>\n<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\">This site was developed to house my wife&rsquo;s personal d&eacute;cor blog. She wanted a custom site built that was mobile friendly that she could control the design and feel of the site. I had originally planned on using something like WordPress as a psudo-database that would allow her to login and post, but she didn&rsquo;t like the look and feel of the front end using WordPress.</p>\n<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\">&nbsp;</p>\n<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\"><em><span style=\"font-size: 14pt; font-family: 'Segoe UI Emoji', sans-serif; color: #2b3e50; background: white;\">What I learned</span></em></p>\n<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\">The site was built using some light PHP, JavaScript, and Bootstrap 3. I used an AWS EC2 instance(Linux ubuntu server running apache) to host the site and purchased a domain for her. I built a fully functional dev version of the site on her home computer and write a quick script to allow her to have a pipeline to publish new content. I re-learned a lot of the fundamentals of bootstrap and also learned all of the new additions to the library since I had last touched it. I then added in some easy integrations to Facebook, Pinterest, and twitter to allow the social sharing of the site. This was the first time I had done this and it turned out to be very simple and just a matter of reading their developer documentation.</p>"
      },

    "Gravity Golf" : {
        "id" : "gravgolf-card",
        "card-title" : "Gravity Golf",
        "card-image" : "assets/img/portfolio/gravitygolf/goalscoresmall.gif",
        "card-alt" : "Picture of a ball going into a goal led by gravity well",
        "card-short" : "Puzzle game prototype made in unity",
        "card-skills": "Unity | C# | Game Design",
        "modal-image": "assets/img/portfolio/gravitygolf/goalscoresmall.gif",
        "modal-title": "Gravity Golf",
        "modal-url": "/assets/webgames/GravityGolf/index.html",
        "modal-github": "https://github.com/sjdodge123/GravPuzzleUnity",
        "modal-content":"<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif; background: white;\"><em><span style=\"font-size: 14pt; font-family: 'Segoe UI Emoji', sans-serif; color: #2b3e50;\">Overview</span></em></p>\n<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\">Gravity golf, codenamed Gravpuzzle, was an effort to make a fully complete puzzle game with a level designer and scoreboard built in. The concept was to allow the player to spawn gravity wells on click that would control where the ball went. The goal for the player was to get the ball into the goal with the least amount of clicks possible.</p>\n<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\">&nbsp;</p>\n<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\"><em><span style=\"font-size: 14pt; font-family: 'Segoe UI Emoji', sans-serif; color: #2b3e50; background: white;\">What I learned</span></em></p>\n<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\">This game was a learning experience in game scope, level design and unity. The game had previous been housed in a flash project which I was looking to deprecate due to the language dying. This game was one of my first ventures into the Unity Editor and let me explore the out of the box features without having to make a totally new game concept. The scope here was important for this project as I did not want to draw on the project for weeks and weeks. The concept was simple and I wanted to build a basic interface and win/lose conditions for the player and get a feel for how fun the concept was on mobile with touch controls.</p>"
    },

    "Group Manager" : {
        "id" : "gm-card",
        "card-title" : "Group Manager",
        "card-image" : "assets/img/portfolio/groupmanager/groupmanageroverviewsmall.gif",
        "card-alt" : "Stagehand group manager image with group tiles",
        "card-short" : "Custom interface to manage Active Directory groups and memberships",
        "card-skills": "Leadership | Integration | ServiceNow",
        "modal-image": "assets/img/portfolio/groupmanager/groupmanageroverview.gif",
        "modal-title": "Group Manager",
        "modal-url": "",
        "modal-github": "",
        "modal-content":"<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif; background: white;\"><em><span style=\"font-size: 14pt; font-family: 'Segoe UI Emoji', sans-serif; color: #2b3e50;\">Overview</span></em></p>\n<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\">The Group Manager is a tool designed to present the end user using Stagehand(ServiceNow service portal) to self-service manage groups and members in Active Directory. The high level concept (pictured below) allows the end user to have a consistent experience with many different AD requests while some are automated jobs and some are still manual tickets. This design allows the end user to easily request what they need without having to contact multiple teams across the org.</p>\n<img class='img-fluid rounded w-100' src='assets/img/portfolio/groupmanager/groupmanagerdiagram.png'</img><p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\">&nbsp;</p>\n<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\"><em><span style=\"font-size: 14pt; font-family: 'Segoe UI Emoji', sans-serif; color: #2b3e50; background: white;\">What I learned</span></em></p>\n<p class=\"MsoNormal\" style=\"margin: 0in 0in 0.0001pt; font-size: 12pt; font-family: Calibri, sans-serif;\">This project is a full stack integration providing the user with a clean front end interface while behind the scenes automating away hundreds of tickets a week. This app was released using what we called our &ldquo;Pilot program&rdquo; which allowed my team to develop using a continuous dev cycle pushing often to a small set of alpha users of the application. Once we delivered key features and bug fixes we would scale the set of alpha users until we felt comfortable with the feedback and progress. This was a large scale integration working with the team that manages our enterprise active directory writing and governing PowerShell scripts on our midserver.</p><br/><img class='img-fluid rounded w-100' src='assets/img/portfolio/groupmanager/detailsoverview.gif'</img><br/><img class='img-fluid rounded w-100' src='assets/img/portfolio/groupmanager/filteroptions.gif'</img>"
      }
    
}